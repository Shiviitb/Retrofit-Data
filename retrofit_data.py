# -*- coding: utf-8 -*-
"""Retrofit Data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TFnOS2Z1Gx0Zp1RV_kXQo8OV47BoDumi
"""

!pip install streamlit

import streamlit as st
import pandas as pd

# Load the Excel file
@st.cache_data
def load_data():
    file_path = 'RETROFIT STRATEGIES CLIMATE CLASSIFICATION 3.09.2024.xlsx'
    xls = pd.ExcelFile(file_path)
    sheet_names = xls.sheet_names
    sheets_data = {sheet: pd.read_excel(xls, sheet_name=sheet) for sheet in sheet_names}
    return sheets_data

# Main app
def main():
    st.title("Retrofit Strategies Database")
    st.write("Browse and search retrofit strategies based on climate classification.")

    sheets = load_data()

    # Choose sheet
    sheet_choice = st.selectbox("Select a sheet to view:", list(sheets.keys()))

    df = sheets[sheet_choice]

    # Search box
    search = st.text_input("Search:", "")
    if search:
        df = df[df.apply(lambda row: row.astype(str).str.contains(search, case=False, na=False).any(), axis=1)]

    st.dataframe(df, use_container_width=True)

if __name__ == "__main__":
    main()

import streamlit as st
import pandas as pd

# Load the Excel file
@st.cache_data
def load_data():
    file_path = 'RETROFIT STRATEGIES CLIMATE CLASSIFICATION 3.09.2024.xlsx'
    xls = pd.ExcelFile(file_path)
    sheet_names = xls.sheet_names
    sheets_data = {sheet: pd.read_excel(xls, sheet_name=sheet) for sheet in sheet_names}
    return sheets_data

# Custom CSS to make it look like a website
hide_streamlit_style = """
            <style>
            #MainMenu {visibility: hidden;}
            footer {visibility: hidden;}
            header {visibility: hidden;}
            </style>
            """
st.markdown(hide_streamlit_style, unsafe_allow_html=True)

# Main app
def main():
    st.markdown("<h1 style='text-align: center; color: #4CAF50;'>Retrofit Strategies Database</h1>", unsafe_allow_html=True)
    st.markdown("<p style='text-align: center;'>Explore energy retrofit strategies tailored to different climate classifications. Search and filter below!</p>", unsafe_allow_html=True)

    sheets = load_data()

    # Choose sheet
    sheet_choice = st.selectbox("Select a category:", list(sheets.keys()))

    df = sheets[sheet_choice]

    # Search box
    search = st.text_input("Search for keywords (e.g., insulation, HVAC, lighting):", "")
    if search:
        df = df[df.apply(lambda row: row.astype(str).str.contains(search, case=False, na=False).any(), axis=1)]

    st.dataframe(df, use_container_width=True)

if __name__ == "__main__":
    main()